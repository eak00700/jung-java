Today. Java(day20)

----------------------------------------
변수 : 1) 2) 3)클래스변수
메서드 : 1) 2)클래스메서드

Ex2001. 클래스변수 / 클래스메서드 : 1)static 키워드 사용
                                2)접근 : "클래스이름."으로 접근 가능.
Ex2002.
[정리] 인스턴스메서드에서 인스턴스변수에 접근이 가능? O
       클래스메서드에서 클래스변수에 접근이 가능? O
       ※"클래스메서드에서는 인스턴스변수에 접근이 불가능!"
       인스턴스메서드에서 클래스변수에 접근이 가능 ? O (공유변수니까)
----------------------------------------------------------------
상속 이후.
    클래스 - 상속 **********************************************
    추상클래스 / 인터페이스 **
    중첩클래스
    예외처리 *
    쓰레드
    제네릭 / 래퍼클래스
    컬렉션프레임워크 **     //자료구조 알고리즘
Ex2003. main()에서, main()이 소속된 클래스의 객체 생성도 가능함.
-------------------------------------------------------------------
클래스 상속(Inheritance)
- 캡슐화 상속성 추상화 다형성 = OOP(객체지향프로그래밍)의 4대 특성

-"상속(성)" ----> 코드의 재활용성(즉, 잘 짜여진 코드가 잇으면 다시 쓰지 않고 재사용할 수 있음.)
                                (코드 똑같이 복붙할 필요가 없음.)

Ex2004. 상속의 기본.
    "extends A" ---> means, 클래스 A를 상속받는 클래스!
    "부모클래스" / "상위클래스" / 기반클래스(base class)
    "자식클래스" / "하위클래스" / 파생클래스(derived class)

Ex2006. @Override ---> 메서드 오버라이드 하는 메서드마다 윗줄에 작성.
        (어노테이션 annotation)
        1)가독성
        2)실수방지
[정리]  메서드 오버로딩(Overloading) : 파라미터의 개수와 타입이 다를때
        메서드 오버라이드(Override) : 메서드를 재정의 할때