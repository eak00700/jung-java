정처산기 W8 Day5.

Today.	프로젝트회의(3조/4조).
	Java(day21)
	Oracle(3)
----------------------------------------------------------------------
Oracle:
ORDER BY 절(clause) : 지정된 컬럼을 기준으로 정렬 수행 (오름차순/내림차순)
	- 위치 : FROM절 뒤에(맨 마지막에).
		(ex) SELECT * FROM employees ORDER BY ...;
	- 오름차순 "ASC" / 내림차순 "DESC"
	  	(ex) SELECT * FROM employees ORDER BY first_name;
		(ex) SELECT * FROM employees ORDER BY hire_date DESC;
	- 1차정렬기준, 2차정렬기준
	  	(ex) 1차정렬기준: 이름 (내림차순), 2차정렬기준: 폰번호 (오름차순)
		SELECT * FROM employees ORDER BY first_name DESC, phone_number;
		SELECT * FROM employees ORDER BY first_name DESC, phone_number ASC;
		SELECT * FROM employees ORDER BY first_name, phone_number DESC;

(참고) "정렬하지 않은(=ORDER BY절이 없는) SELECT문의 출력 순서는
	아무 의미 없다!"
	이게 '데이터 저장 순서'를 의미하는 게 아님!

--연습1. 사원의 "이름"(이름_성의 형식으로)을 급여가 높은 순서로 조회하는 SQL 작성.   // 급여가 높은 사람부터 출력.
SELECT first_name ||' '||last_name "이름_성"
FROM employees
ORDER BY salary DESC;
--연습2. 사원의 이름_성, 급여를 급여가 높은 순으로 조회하는 SQL.
SELECT first_name||' '||last_name "이름_성", salary 
FROM employees
ORDER BY salary DESC;


--연습3. 사원의 이름_성, 업무ID를 조회하되, 업무별로 묶여서 출력되도록 해보세요. (업무별로 끼리끼리 모여서 출력되도록)
SELECT first_name||' '||last_name "이름_성", job_id
FROM employees
ORDER BY job_id;
--연습4. "부서별로" 사원의 부서ID, 이름_성, 급여를 조회하는 SQL을 작성하되, "급여가 높은 사원부터" 출력.
-- 각각의 부서별로 출력하되, 각 부서 안에서 급여가 높은
-- 사원부터 출력하라는 의도.
SELECT department_id "부서ID", first_name||' '||last_name "이름_성", salary
FROM employees
ORDER BY department_id,salary DESC;
--연습5. 사원의 이름_성을 조회하되, 성을 기준으로 ABC순으로 정렬하여 조회하는 SQL.
SELECT first_name||' '||last_name "이름_성"
FROM employees
ORDER BY last_name;
--연습6. 사원의 이름_성, 고용일을 조회하되, 최근에 고용된 사람 순으로 조회하는 SQL.
SELECT first_name||' '||last_name "이름_성", hire_date "고용일"
FROM employees
ORDER BY hire_date DESC;
--연습7. 부서별로 사원의 이름_성, 고용일, 부서ID를 조회하는 SQL.
--단, 부서별로 최근에 고용된 사람 순으로 조회.
---> 1차정렬기준은? 2차정렬기준은??
SELECT first_name||' '||last_name "이름_성" , hire_date "고용일", department_id "부서ID"
FROM employees
ORDER BY department_id ASC, hire_date DESC;

-----------------------------------------------------------------------------------------------
WHERE절.
	- 의미 : 조건문(if)
	- 위치 : FROM절 뒤에. ORDER BY절 안에.
	  ※ [정리] SELECT / FROM / WHERE / ORDER BY
	     [기억]  3         1	2	4
	(ex)
		SELECT employee_id, first_name, last_name
		FROM employees
		WHERE employee_id > 101 ANM employee_id <= 105;
	(ex)
		SELECT first_name 이름, salary 급여
		FROM employees
		WHERE '급여' >= '10000';
	- 조건식에서 사용할 수 있는 연산자 :
		> < >= <=
		!=
		= (주의!, ==이 아님)
	- 조건식과 조건식에 대한 연산자 : AND, OR, NOT
--연습8. 사원의 이름이 'Bruce'이고 성이 'Ernst'인  사원의 이름_성, 급여, 이메일을 조회하시오
SELECT first_name||' '||last_name "이름_성", salary "급여", email
FROM employees
WHERE first_name='Bruce' AND last_name='Ernst';
--연습9. 사원의 이름_성이 'Bruce_Ernst'인 사원의 이름_성, 급여, 이메일을 조회하시오
SELECT first_name||'_'||last_name "이름_성", salary "급여", email
FROM employees
WHERE first_name||'_'||last_name = 'Bruce_Ernst';

--연습10. 사원의 급여가 10000(달러) 이상인 사원의 이름_성, 급여, 고용일을 조회하시오
SELECT first_name||' '||last_name "이름_성", salary "급여", hire_date "고용일"
FROM employees
WHERE salary >= '10000';

--연습 11. 사원의 부서 ID가 100 이상인 사원의 이름_성, 부서ID,를 조회하시오
SELECT first_name||' '||last_name "이름_성", department_id "부서ID"
FROM employees
WHERE department_id >= '100' 
ORDER BY department_id, last_name;
--------------------------------------------------------------------------------------------
LIKE검색.
	- WHERE절, = 이 아니라 LIKE 키워드를 사용.
	- (문자열의) 일부만으로 검색할 때 사용.
		(ex) 'Steven' ---> 'St'로 시작하는지?
		(ex) 'Steven' ---> 'eve'가 포함되어 있는지?
	- [암기] 와일드카드 문자 ('언더바' 와 '퍼센트'):
		_ -------> 딱 1개의 문자.
		% -------> 0개 이상의 문자.
		(ex) SELECT * FROM employees WHERE first_name LIKE 'St%';
			----> 이름이 St로 시작하는 모든 사원들을 조회.
		(ex) SELECT * FROM employees WHERE first_name LIKE 'St____';
			----> 이름이 St 뒤에 4글자가 더 붙는 사원들을 조회.

--연습 12. 성이 K로 시작하는 사원의 이름_성, 폰번호를 조회하시오
SELECT first_name||'_'||last_name "이름_성", phone_number"폰번호"
FROM employees
WHERE last_name LIKE 'K%';
--연습13 이름이 er로 끝나느 사원의 이름_성, 입사일을 조회하시오
SELECT first_name||'_'||last_name "이름_성", hire_date "고용일"
FROM employees
WHERE first_name LIKE '%er';
--연습 14. 성이 4글자인 사원의 이름, 성을 조회하시오
SELECT first_name"이름",last_name "성"
FROM employees
WHERE last_name LIKE '____';

--------------------------------------------------------------
(참고) BETWEEN ... AND (연산자) (사용을 적극 권장)
	- "컬럼명 BETWEEN 값1 AND 값2"
	  ---> 해당 컬럼의 값이 값1과 값2 사이에 있냐?
		(=) 컬럼명>=값1 AND 컬럼명<=값2
	- 주의: 값1 < 값2 일 것. (작은 값을 먼저 써야 함.)

	(ex) 급여가 8000 달러 이상이고 9000 달러 이하인 사원을 조회.
		SELECT * FROM employees
		WHERE salary BETWEEN 8000 AND 9000;
-----------------------------------------------------------------------------------------
JAVA(day21)
JAVA DB Connection --> "JDBC"
'JDBC 드라이버 파일'을 준비 -->DBMS 제품군에 따라 다름
